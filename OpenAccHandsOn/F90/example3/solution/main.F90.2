module mod_example3
! integer, parameter :: HEIGHT=16384
! integer, parameter :: WIDTH=16384
  integer, parameter :: HEIGHT=4096
  integer, parameter :: WIDTH=4096
  integer, parameter :: MAXCOLORS = 255

contains
  subroutine write_pgm(image, filename, iunit)
    integer(1) :: image(HEIGHT, WIDTH)
    character*(*) :: filename
    integer, optional :: iunit
    character*50 :: hdr
    integer nc, junit
    if (present(iunit)) then
      junit = iunit
    else
      junit = 10
    endif
    open(unit=junit,file=filename,access='stream',form='unformatted')
    write(hdr,fmt='(a,a,a,a,i0,1x,i0,a,i0,a)') 'P5', new_line('a'), '#comment', &
           new_line('a'),WIDTH, HEIGHT, new_line('a'), MAXCOLORS, new_line('a')
    nc = len_trim(hdr)
    write(junit) hdr(1:nc)
    write(junit) image
    close(junit)
  end subroutine
   
  real(8) function mandlebrot(px,py)
    !$acc routine(mandlebrot) seq
    integer, parameter         :: MAX_ITERS=100
    real(8), parameter         :: xmin=-1.7
    real(8), parameter         :: xmax=.5
    real(8), parameter         :: ymin=-1.2
    real(8), parameter         :: ymax=1.2
    real(8), parameter         :: dx=(xmax-xmin)/WIDTH
    real(8), parameter         :: dy=(ymax-ymin)/HEIGHT
    integer, intent(in), value :: px, py
    real(8)                    :: x0, y0, xtemp, x, y
    integer                    :: i

    x0 = xmin+Px*dx
    y0 = ymin+Py*dy
    x = 0.0d0
    y = 0.0d0
    i = 0

    do while(((x*x+y*y).lt.4.0d0).and.(i.lt.MAX_ITERS))
      xtemp=x*x - y*y + x0
      y=2*x*y + y0
      x=xtemp
      i = i+1
    enddo
    mandlebrot =  dble(MAXCOLORS)*i/MAX_ITERS
  end function mandlebrot

end module mod_example3

program example3
use mod_example3
integer, parameter   :: BATCH_SIZE=32
integer(1) :: image(HEIGHT, WIDTH)
integer :: ystart, yend, yp, iy, ix
image = 0

NUM_BATCHES=WIDTH/BATCH_SIZE

!$acc data create(image)
do yp=0,NUM_BATCHES-1
    ystart = yp * BATCH_SIZE + 1
    yend   = ystart + BATCH_SIZE - 1
    !$acc parallel loop collapse(2) async(iand(yp,3))
    do iy=ystart,yend
      do ix=1,HEIGHT
        image(ix,iy) = min(max(int(mandlebrot(ix-1,iy-1)),0),MAXCOLORS)
      enddo
    enddo
    !$acc update host(image(:,ystart:yend)) async(iand(yp,3))
enddo
!$acc wait

!$acc end data
call write_pgm(image,'image.pgm')
end
